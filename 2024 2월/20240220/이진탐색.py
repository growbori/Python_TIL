'''
1-N 까지의 자연수를 이진탐색 트리에 저장하려고 한다.
왼쪽 서브트리의 루트 < 현재 노드 < 오른쪽 서브트리의 규칙을 만족 (중위순회)
추가나 삭제가 없는 경우에는 완전 이진 트리가 되도록 만든다.
완전 이진 트리의 노드 번호는 루트를 1번을 하고 아래로 가면서 왼쪽에서 오른쪽 순으로 증가하낟.
N이 주어졌을 때 완전 이진 트리로 만든 이진 탐색 트리의 루트에 저장된 값과, N/2번 노드(N이 홀수인 경우 소수점 버림)에 저장된 값을 출력하는 프로그램을 만드시오.
'''
def in_order(T, N):
    global cnt
    if T <= N:
        in_order(T*2, N)
        tree[T] = cnt
        cnt += 1
        in_order(T*2+1, N)


T = int(input())

for tc in range(1, T+1):
    N = int(input())
    tree = [0] * (N+1)      # 비어있는 완전이진트리
    cnt = 1
    in_order(1, N)
    print(f'#{tc} {tree[1]} {tree[N//2]}')